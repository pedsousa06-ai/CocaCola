Questao 1
O que é um repositório no Git e qual a sua importância?
Um repositório é o local onde o Git armazena todos os arquivos de um projeto e seu histórico de versões.
Ele é importante porque permite controlar alterações, restaurar versões antigas e trabalhar em equipe de forma organizada.

Questao 2
Qual a função do Git Bash?
O Git Bash é um terminal que simula o ambiente Linux no Windows e permite executar comandos Git.
Ele é usado para interagir com o Git de forma prática.

Questao 3
O que faz o comando git add e qual a diferença entre git add <arquivo> e git add .?
O comando git add adiciona arquivos modificados na área de preparação (staging area).
git add <arquivo> adiciona apenas o arquivo especificado.
git add . adiciona todos os arquivos modificados do diretório atual.

Questao 4
Por que usamos o ponto (.) no comando git add .?
O ponto representa "todos os arquivos do diretório atual e subdiretórios". É
uma forma rápida de adicionar tudo de uma vez.

Questao 5
Explique o comando git commit e por que é importante criar uma mensagem descritiva.
O git commit salva as mudanças da área de preparação no repositório, criando um ponto no histórico.
A mensagem descritiva ajuda a entender o que foi alterado e facilita o trabalho em equipe e a manutenção do projeto.

Questao 6
Qual a função do comando git push?
O git push envia as alterações do repositório local para o repositório remoto (ex.: GitHub, GitLab).

Questao 7
Qual a importância de criar compromissos (commits) frequentes durante o desenvolvimento de um projeto?
Fazer commits frequentes cria um histórico claro, facilita a identificação de erros,
permite reverter mudanças específicas e melhora o trabalho colaborativo.

Questao 8
Explique a função das tags HTML e como elas estruturam uma página.
As tags HTML são elementos que definem a estrutura e o conteúdo da página
(títulos, parágrafos, links, imagens etc.). Juntas, elas organizam a hierarquia e o layout do site.

Questao 9
O que são atributos em uma tag HTML e qual a sua função?
Atributos fornecem informações adicionais a uma tag, como src em <img>, href em <a>, ou class em <div>.
Eles controlam o comportamento ou estilo do elemento.

Questao 10
O que é o Emmet e como ele facilita o desenvolvimento de páginas HTML?
O Emmet é um plugin usado em editores de código que permite escrever abreviações que se expandem
automaticamente em código HTML e CSS, agilizando a produção.

Questao 11
O que é o box-sizing no CSS e por que usamos ele no reset inicial?
O box-sizing define como o navegador calcula o tamanho dos elementos (largura e altura).
content-box (padrão): largura considera apenas o conteúdo.\
border-box: largura inclui conteúdo, padding e borda.
Usamos border-box no reset inicial porque facilita o controle do layout e evita cálculos manuais.

Questao 12
Por que é importante usar tags semânticas no HTML?
Tags semânticas (header, main, article, footer, etc.)
dão significado ao conteúdo, melhoram a acessibilidade, o SEO e a legibilidade do código.

Questao 13
O que são media queries no CSS e qual a sua função?
Media queries permitem aplicar estilos diferentes
dependendo do dispositivo (tamanho de tela, orientação, etc.), tornando o site responsivo.

Questao 14
Qual a função do GitHub Pages?
O GitHub Pages permite hospedar sites diretamente de um repositório GitHub, de forma gratuita e simples.

Questao 15
O que é o Flexbox no CSS e para que ele é utilizado?
O Flexbox é um modelo de layout do CSS que facilita alinhar,
distribuir e organizar elementos em um container, seja em linhas ou colunas.

Questao16
Qual a diferença entre justify-content e align-items em um container Flexbox?
justify-content: alinha os itens no eixo principal (horizontal, se row; vertical, se column).
align-items: alinha os itens no eixo cruzado (perpendicular ao principal).

Questao 17
Como flex-grow funciona e qual seu propósito no layout Flexbox?
O flex-grow define quanto espaço extra um item deve ocupar em relação aos outros.
Exemplo: se dois itens têm flex-grow: 1 e flex-grow: 2, o segundo ocupará o dobro de espaço que o primeiro.

Questao 18
Explique a diferença entre flex-direction: column; e flex-direction: row;.
row (padrão): os itens ficam em linha horizontal, da esquerda para a direita.
column: os itens ficam em coluna vertical, de cima para baixo